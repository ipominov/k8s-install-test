---

- name: set name of master
  hostname:
    name: k8s-master

- name: add master address in /et/chostname
  lineinfile:
    path: /etc/hosts
    line: "{{ ansible_default_ipv4.address }} k8s-master"

- name: enable br_netfilter kernel module autoload
  lineinfile:
    path: /etc/modules-load.d/k8s.conf
    line: br_netfilter
    create: yes
  
- name: ensure that br_netfilter is really loaded right now
  modprobe:
    name: br_netfilter
    state: present

- name: set up some kernel settings
  sysctl: 
    name: net.bridge.bridge-nf-call-ip6tables
    value: '1'
    sysctl_file: /etc/sysctl.d/k8s.conf
    sysctl_set: yes

- name: set up some kernel settings 2
  sysctl: 
    name: net.bridge.bridge-nf-call-iptables
    value: '1'
    sysctl_file: /etc/sysctl.d/k8s.conf
    sysctl_set: yes

- name: download pero key
  get_url:
    url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
    dest: /usr/share/keyrings/kubernetes-archive-keyring.gpg
    mode: '0644'
  
- name: add kubernetes repository
  lineinfile:
    path: /etc/apt/sources.list.d/kubernetes.list
    line: deb [signed-by=/usr/share/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main
    create: yes

- name: update cache
  apt:
    update_cache: yes

#- name: Update all packages to their latest version
#  apt:
#    name: "*"
#    state: latest

- name: install prereqvis
  apt:
    name: "{{ item }}"
    state: present
  loop:
    - docker
    - docker.io
    - apt-transport-https
    - ca-certificates
    - curl
  
- name: set up cgroup driver for docker
  copy: src=daemon.json dest=/etc/docker/daemon.json
  notify: reload docker service

- name:
  apt:
    name: "{{ item }}"
    state: present
  loop:
    - kubelet
    - kubeadm
    - kubectl   